- var subscriptionTypes = '$$ JSON.stringify(N.models.users.Subscription.types) $$'
- var menu_rnd_id = 'rnd' + self.get_label_uid()

- var items = []

if self.runtime.is_member && !self.is_club_member && self.settings.clubs_can_join_clubs
  - items.push('club_join')

if self.runtime.is_member
  if self.is_club_member && self.settings.clubs_can_start_topics
    - items.push('topic_create')

- items.push('search')

if self.runtime.is_member
  - items.push('mark_read')
  - items.push('subscription')

if self.settings.can_report_abuse
  - items.push('abuse_report')

if self.runtime.is_member && self.is_club_member && self.settings.clubs_can_join_clubs
  - items.push('club_leave')

if self.settings.clubs_mod_can_delete_clubs
  if self.club.exists
    - items.push('club_delete')
  else
    - items.push('club_undelete')


if self.selected_cnt
  if items.length > 0
    - items.push('divider')
  - items.push('many_header')
  - items.push('many_unselect')
  if (self.is_club_owner && self.settings.clubs_lead_can_delete_topics) || self.settings.clubs_mod_can_delete_topics
    - items.push('many_delete')
  if self.settings.clubs_mod_can_delete_topics
    //- club owner can't see deleted topics, so don't show "undelete"
    - items.push('many_undelete')
  if (self.is_club_owner && self.settings.clubs_lead_can_close_topic) || self.settings.clubs_mod_can_close_topic
    - items.push('many_open')
    - items.push('many_close')

//- If last item is header - remove it
if items.length > 0 && items[items.length - 1] === 'header'
  - items.pop()

.page-actions__dropdown
  if items.length > 0

    button.btn.btn-secondary.btn-square.icon.icon-dropdown.dropdown-toggle(
      type='button'
      id=menu_rnd_id
      aria-haspopup='true'
      aria-expanded='false'
      data-bs-toggle='dropdown'
    )

    .dropdown-menu.dropdown-menu-end(aria-labelledby=menu_rnd_id)

      each item in items
        case item

          when 'club_join'
            //- this menu element should be shown in navbar OR on small screen
            button.dropdown-item.hidden-page-head(
              type='button'
              data-on-click='clubs.sole:join'
              data-club-hid=self.club.hid
            )= self.t('club_join')

            button.dropdown-item.d-sm-none.hidden-nav-alt(
              type='button'
              data-on-click='clubs.sole:join'
              data-club-hid=self.club.hid
            )= self.t('club_join')

          when 'club_leave'
            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:leave'
              data-club-hid=self.club.hid
            )= self.t('club_leave')

          when 'club_delete'
            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:delete'
              data-club-hid=self.club.hid
            )= self.t('club_delete')

          when 'club_undelete'
            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:undelete'
              data-club-hid=self.club.hid
            )= self.t('club_undelete')

          when 'topic_create'
            //- this menu element should be shown in navbar OR on small screen
            button.dropdown-item.hidden-page-head(
              type='button'
              data-on-click='clubs.sole:create'
              data-club-hid=self.club.hid
              data-club-title=self.club.title
            )= self.t('topic_create')

            button.dropdown-item.d-sm-none.hidden-nav-alt(
              type='button'
              data-on-click='clubs.sole:create'
              data-club-hid=self.club.hid
              data-club-title=self.club.title
            )= self.t('topic_create')

          when 'mark_read'
            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:mark_read'
              data-club-hid=self.club.hid
            )= self.t('mark_read')

          when 'search'
            a.dropdown-item(
              href=self.link_to('search.club_sole', { $query: { hid: self.club.hid } })
            )= self.t('search')

          when 'subscription'
            - var subscriptionIcon = 'icon-track-normal'
            if (self.subscription === subscriptionTypes.TRACKING)
              - subscriptionIcon = 'icon-track-tracking'
            else if (self.subscription === subscriptionTypes.WATCHING)
              - subscriptionIcon = 'icon-track-watching'

            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:subscription'
              data-club-hid=self.club.hid
              data-club-subscription=self.subscription
            )
              if self.subscription && self.subscription !== subscriptionTypes.NORMAL
                span.icon.icon-space-after(class=subscriptionIcon)
              = self.t('subscription')

          when 'abuse_report'
            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:report'
              data-club-id=self.club._id
            )= self.t('abuse_report')

          when 'divider'
            .dropdown-divider

          when 'many_header'
            .dropdown-header=self.t('many_header', { count: self.selected_cnt })

          when 'many_unselect'
            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:topics_unselect'
            )=self.t('many_unselect')

          when 'many_delete'
            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:delete_many'
            )= self.t('many_delete')

          when 'many_undelete'
            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:undelete_many'
            )= self.t('many_undelete')

          when 'many_close'
            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:close_many'
            )= self.t('many_close')

          when 'many_open'
            button.dropdown-item(
              type='button'
              data-on-click='clubs.sole:open_many'
            )= self.t('many_open')

